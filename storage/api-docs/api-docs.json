{
    "openapi": "3.0.0",
    "info": {
        "title": "CRUD Builder API Documentation",
        "description": "API documentation for the CRUD Builder, designed to generate CRUD operations dynamically for various models and configurations.",
        "contact": {
            "email": "support@yourcrudbuilder.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "58fe5a217ef88ae75e9b530a5e5817d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "user_type",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "role_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "ea134134deae11eb974c719450ef8a02",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "5ebea01ab5f21df71d38f3505718a1d7",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "operationId": "e2da618f5fd0174f82eb64d3c022fc6b",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-boss": {
            "get": {
                "tags": [
                    "Boss"
                ],
                "summary": "Get all bosss",
                "operationId": "76744569d6a13feb921491c169f69d02",
                "responses": {
                    "200": {
                        "description": "A list of bosss"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Boss"
                ],
                "summary": "Create a new boss",
                "operationId": "4982be6fab2a2c56d1cee2cf0dee689a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Boss created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-boss/{id}": {
            "get": {
                "tags": [
                    "Boss"
                ],
                "summary": "Get a boss by ID",
                "operationId": "05fc8d35e8275e7f23c615ea841888c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single boss object"
                    },
                    "404": {
                        "description": "Boss not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Boss"
                ],
                "summary": "Update an existing boss",
                "operationId": "273d9e443d19505680a359c8525f00c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Boss updated successfully"
                    },
                    "404": {
                        "description": "Boss not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Boss"
                ],
                "summary": "Delete a boss by ID",
                "operationId": "71f681cdbb5656d421005b1dfe53ae5d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the boss to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Boss deleted successfully"
                    },
                    "404": {
                        "description": "Boss not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-dos": {
            "get": {
                "tags": [
                    "Dos"
                ],
                "summary": "Get all doss",
                "operationId": "4f22dcd8f89d81cfbf9d0c88ce2976ed",
                "responses": {
                    "200": {
                        "description": "A list of doss"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dos"
                ],
                "summary": "Create a new dos",
                "operationId": "7951305f6ba1017f9b1c985212063b8c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dos created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-dos/{id}": {
            "get": {
                "tags": [
                    "Dos"
                ],
                "summary": "Get a dos by ID",
                "operationId": "549aaa36cdcd7a5c8a2bb481744d504a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single dos object"
                    },
                    "404": {
                        "description": "Dos not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dos"
                ],
                "summary": "Update an existing dos",
                "operationId": "40d76bb04547d19bdc1099a72b5498fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dos updated successfully"
                    },
                    "404": {
                        "description": "Dos not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dos"
                ],
                "summary": "Delete a dos by ID",
                "operationId": "b00732bab3d2a9292768ce1a98bfda49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dos to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Dos deleted successfully"
                    },
                    "404": {
                        "description": "Dos not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-robot": {
            "get": {
                "tags": [
                    "Robot"
                ],
                "summary": "Get all robots",
                "operationId": "6b193b333f08f372a9b74e42b9057db4",
                "responses": {
                    "200": {
                        "description": "A list of robots"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Robot"
                ],
                "summary": "Create a new robot",
                "operationId": "fdae9c78e3529a0d8ce48766cf85381b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Robot created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-robot/{id}": {
            "get": {
                "tags": [
                    "Robot"
                ],
                "summary": "Get a robot by ID",
                "operationId": "63eab0841787627b51cf792468e972be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single robot object"
                    },
                    "404": {
                        "description": "Robot not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Robot"
                ],
                "summary": "Update an existing robot",
                "operationId": "6e38e4d3eef6d7c9a846c197042f656c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Robot updated successfully"
                    },
                    "404": {
                        "description": "Robot not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Robot"
                ],
                "summary": "Delete a robot by ID",
                "operationId": "29451baf96acca4cc4c45fd3a93173b5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the robot to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Robot deleted successfully"
                    },
                    "404": {
                        "description": "Robot not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-tom": {
            "get": {
                "tags": [
                    "Tom"
                ],
                "summary": "Get all toms",
                "operationId": "ad577dc8405322465f6cc57c47d6e95d",
                "responses": {
                    "200": {
                        "description": "A list of toms"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tom"
                ],
                "summary": "Create a new tom",
                "operationId": "df94b93d22681f4edd4fbc72b7b0e099",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "integer",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tom created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-tom/{id}": {
            "get": {
                "tags": [
                    "Tom"
                ],
                "summary": "Get a tom by ID",
                "operationId": "88e97dc4c71834d3c5c40def7c8cce49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single tom object"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tom"
                ],
                "summary": "Update an existing tom",
                "operationId": "0a717b61e9126262a44d7e923c739749",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "integer",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tom updated successfully"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tom"
                ],
                "summary": "Delete a tom by ID",
                "operationId": "30db6518dc864b04d1eb4df5af5a73e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tom to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tom deleted successfully"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-zero": {
            "get": {
                "tags": [
                    "Zero"
                ],
                "summary": "Get all zeros",
                "operationId": "6b1fb3c9201b47560083e7ca21a22950",
                "responses": {
                    "200": {
                        "description": "A list of zeros"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Zero"
                ],
                "summary": "Create a new zero",
                "operationId": "7b3c094a71a457bac52a8bfeefa7305c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Zero created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-zero/{id}": {
            "get": {
                "tags": [
                    "Zero"
                ],
                "summary": "Get a zero by ID",
                "operationId": "0b3ab35acfe41c634937591242510ce5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single zero object"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Zero"
                ],
                "summary": "Update an existing zero",
                "operationId": "c9b24477ab882895a5f95b35aea8e845",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zero updated successfully"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Zero"
                ],
                "summary": "Delete a zero by ID",
                "operationId": "177aced90d425cca320ffb28737af380",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the zero to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Zero deleted successfully"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Boss",
            "description": "Boss management operations"
        },
        {
            "name": "Dos",
            "description": "Dos management operations"
        },
        {
            "name": "Robot",
            "description": "Robot management operations"
        },
        {
            "name": "Tom",
            "description": "Tom management operations"
        },
        {
            "name": "Zero",
            "description": "Zero management operations"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}