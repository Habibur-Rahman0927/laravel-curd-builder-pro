{
    "openapi": "3.0.0",
    "info": {
        "title": "CRUD Builder API Documentation",
        "description": "API documentation for the CRUD Builder, designed to generate CRUD operations dynamically for various models and configurations.",
        "contact": {
            "email": "support@yourcrudbuilder.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "58fe5a217ef88ae75e9b530a5e5817d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "user_type",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "role_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "ea134134deae11eb974c719450ef8a02",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "5ebea01ab5f21df71d38f3505718a1d7",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "operationId": "e2da618f5fd0174f82eb64d3c022fc6b",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-best": {
            "get": {
                "tags": [
                    "Best"
                ],
                "summary": "Get all bests",
                "operationId": "ea1029a34ac4d985d46d2b3b9d565d83",
                "responses": {
                    "200": {
                        "description": "A list of bests"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Best"
                ],
                "summary": "Create a new best",
                "operationId": "039796928945959c5946fc317856141d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Best created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-best/{id}": {
            "get": {
                "tags": [
                    "Best"
                ],
                "summary": "Get a best by ID",
                "operationId": "4e4b3e24d82ae4605aa6ad2b3c7c1749",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single best object"
                    },
                    "404": {
                        "description": "Best not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Best"
                ],
                "summary": "Update an existing best",
                "operationId": "4df1127b13a56d21672fef5294f9e54e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Best updated successfully"
                    },
                    "404": {
                        "description": "Best not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Best"
                ],
                "summary": "Delete a best by ID",
                "operationId": "893481da7b671d60b582a5cf06e42daf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the best to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Best deleted successfully"
                    },
                    "404": {
                        "description": "Best not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-finall": {
            "get": {
                "tags": [
                    "Finall"
                ],
                "summary": "Get all finalls",
                "operationId": "1bb46d34d11c2af6b2bfac60d4c80729",
                "responses": {
                    "200": {
                        "description": "A list of finalls"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Finall"
                ],
                "summary": "Create a new finall",
                "operationId": "272b687076ceee9e04365d9ef5a6b45f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "user_id,users": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "PermissionGroup": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Finall created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-finall/{id}": {
            "get": {
                "tags": [
                    "Finall"
                ],
                "summary": "Get a finall by ID",
                "operationId": "06a7c28307bedc477ac11923e6f8f442",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single finall object"
                    },
                    "404": {
                        "description": "Finall not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Finall"
                ],
                "summary": "Update an existing finall",
                "operationId": "966d982989cb4e5cabf287ce100c5588",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "user_id,users": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "PermissionGroup": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Finall updated successfully"
                    },
                    "404": {
                        "description": "Finall not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Finall"
                ],
                "summary": "Delete a finall by ID",
                "operationId": "10cfa3c94d71ba64adfa1603d84b7663",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the finall to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Finall deleted successfully"
                    },
                    "404": {
                        "description": "Finall not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-gen": {
            "get": {
                "tags": [
                    "Gen"
                ],
                "summary": "Get all gens",
                "operationId": "7f057a6a6ff612dbf0e54bd9f69c51a7",
                "responses": {
                    "200": {
                        "description": "A list of gens"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gen"
                ],
                "summary": "Create a new gen",
                "operationId": "293dd85be96a798b8ef488c66dd044f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Gen created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-gen/{id}": {
            "get": {
                "tags": [
                    "Gen"
                ],
                "summary": "Get a gen by ID",
                "operationId": "50e77f58e26460607c5403b438326100",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single gen object"
                    },
                    "404": {
                        "description": "Gen not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Gen"
                ],
                "summary": "Update an existing gen",
                "operationId": "447f19f0fb136d9304aa9e1a3bfcba23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Gen updated successfully"
                    },
                    "404": {
                        "description": "Gen not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Gen"
                ],
                "summary": "Delete a gen by ID",
                "operationId": "0ab5b0ab0a9b748bc3a56c16b2f88437",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the gen to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Gen deleted successfully"
                    },
                    "404": {
                        "description": "Gen not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-let": {
            "get": {
                "tags": [
                    "Let"
                ],
                "summary": "Get all lets",
                "operationId": "ee03d2e0427dd5d2ac092cb3ea8d45e7",
                "responses": {
                    "200": {
                        "description": "A list of lets"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Let"
                ],
                "summary": "Create a new let",
                "operationId": "b22846987852e4f33261c7e0af97ac8e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Let created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-let/{id}": {
            "get": {
                "tags": [
                    "Let"
                ],
                "summary": "Get a let by ID",
                "operationId": "9eb2db3dabf62bd4d7941fe15d008de3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single let object"
                    },
                    "404": {
                        "description": "Let not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Let"
                ],
                "summary": "Update an existing let",
                "operationId": "20b073d9683651cedfb3a5c46b564f56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "checkbox_test": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Let updated successfully"
                    },
                    "404": {
                        "description": "Let not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Let"
                ],
                "summary": "Delete a let by ID",
                "operationId": "6ec2244aed00301bdf1061d73f087aa8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the let to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Let deleted successfully"
                    },
                    "404": {
                        "description": "Let not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "operationId": "727821eff4fb4c1fb901f9166710c8cb",
                "responses": {
                    "200": {
                        "description": "A list of products"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "operationId": "2a864a97ac07d41d10e25dcd8d2010ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a product by ID",
                "operationId": "2cded4c94ce7bbd89da58cd903eae5ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single product object"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update an existing product",
                "operationId": "e1e371f95e5f79688024124dd2340d2f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product by ID",
                "operationId": "e833874b6161135740fd0d41b773a947",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-tom": {
            "get": {
                "tags": [
                    "Tom"
                ],
                "summary": "Get all toms",
                "operationId": "ad577dc8405322465f6cc57c47d6e95d",
                "responses": {
                    "200": {
                        "description": "A list of toms"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tom"
                ],
                "summary": "Create a new tom",
                "operationId": "df94b93d22681f4edd4fbc72b7b0e099",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tom created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-tom/{id}": {
            "get": {
                "tags": [
                    "Tom"
                ],
                "summary": "Get a tom by ID",
                "operationId": "88e97dc4c71834d3c5c40def7c8cce49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single tom object"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tom"
                ],
                "summary": "Update an existing tom",
                "operationId": "0a717b61e9126262a44d7e923c739749",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tom updated successfully"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tom"
                ],
                "summary": "Delete a tom by ID",
                "operationId": "30db6518dc864b04d1eb4df5af5a73e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tom to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tom deleted successfully"
                    },
                    "404": {
                        "description": "Tom not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-zero": {
            "get": {
                "tags": [
                    "Zero"
                ],
                "summary": "Get all zeros",
                "operationId": "6b1fb3c9201b47560083e7ca21a22950",
                "responses": {
                    "200": {
                        "description": "A list of zeros"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Zero"
                ],
                "summary": "Create a new zero",
                "operationId": "7b3c094a71a457bac52a8bfeefa7305c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Zero created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/api-zero/{id}": {
            "get": {
                "tags": [
                    "Zero"
                ],
                "summary": "Get a zero by ID",
                "operationId": "0b3ab35acfe41c634937591242510ce5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single zero object"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Zero"
                ],
                "summary": "Update an existing zero",
                "operationId": "c9b24477ab882895a5f95b35aea8e845",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "example_value"
                                    },
                                    "relationship_status": {
                                        "type": "string",
                                        "example": "example_value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zero updated successfully"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Zero"
                ],
                "summary": "Delete a zero by ID",
                "operationId": "177aced90d425cca320ffb28737af380",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the zero to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Zero deleted successfully"
                    },
                    "404": {
                        "description": "Zero not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Best",
            "description": "Best management operations"
        },
        {
            "name": "Finall",
            "description": "Finall management operations"
        },
        {
            "name": "Gen",
            "description": "Gen management operations"
        },
        {
            "name": "Let",
            "description": "Let management operations"
        },
        {
            "name": "Product",
            "description": "Product management operations"
        },
        {
            "name": "Tom",
            "description": "Tom management operations"
        },
        {
            "name": "Zero",
            "description": "Zero management operations"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}